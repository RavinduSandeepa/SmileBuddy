/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.DB_Connection;
import Model.User;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ravin
 */
public class ScoreBoard extends javax.swing.JFrame {

    User currentUser;
    String selectedGame = "";
    String gameColumn = "", lastScoreColumn = "";
    /**
     * Creates new form ScoreBoard
     */
    //public ScoreBoard() {
    //    initComponents();
    //    Toolkit toolkit = getToolkit();
    //    Dimension size = toolkit.getScreenSize();
    //    setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
    //}

    ScoreBoard(User user) throws SQLException {
        currentUser = user;
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        
        selectedGame = dropDown.getSelectedItem().toString();
        
        gameColumn = "score";
        lastScoreColumn = "lastScore";
        getScoreData(gameColumn,lastScoreColumn);
        getHighestData(gameColumn);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dropDown = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        usrHighScore = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        usrLastScore = new javax.swing.JLabel();
        name1 = new javax.swing.JLabel();
        name2 = new javax.swing.JLabel();
        name3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        highScore1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        highScore2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        highScore3 = new javax.swing.JLabel();
        btnPlayAgain = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        datelabel = new javax.swing.JLabel();
        timelabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 70)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Score");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(413, 120, 20, 400));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Your Score");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("High Scores");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, -1, -1));

        dropDown.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        dropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SMILE GAME", "HEART GAME", "STAR GAME" }));
        dropDown.setName("Select Game"); // NOI18N
        dropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownActionPerformed(evt);
            }
        });
        getContentPane().add(dropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 30, 170, 50));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Highest Score");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Last Score");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, -1, -1));

        usrHighScore.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        usrHighScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usrHighScore.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usrHighScore, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usrHighScore, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 110, 60));

        usrLastScore.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        usrLastScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usrLastScore.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usrLastScore, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usrLastScore, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, 110, 60));

        name1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        name1.setForeground(new java.awt.Color(255, 255, 255));
        name1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name1.setText("name1");
        getContentPane().add(name1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 210, 180, -1));

        name2.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        name2.setForeground(new java.awt.Color(255, 255, 255));
        name2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name2.setText("name2");
        getContentPane().add(name2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 320, 180, -1));

        name3.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        name3.setForeground(new java.awt.Color(255, 255, 255));
        name3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name3.setText("name3");
        getContentPane().add(name3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 430, 180, -1));

        highScore1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        highScore1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        highScore1.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(highScore1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(highScore1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 200, 110, 60));

        highScore2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        highScore2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        highScore2.setText("0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(highScore2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(highScore2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 310, 110, 60));

        highScore3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        highScore3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        highScore3.setText("0");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(highScore3, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(highScore3, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 420, 110, 60));

        btnPlayAgain.setBackground(new java.awt.Color(0, 0, 255));
        btnPlayAgain.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnPlayAgain.setForeground(new java.awt.Color(255, 255, 255));
        btnPlayAgain.setText("PLAY AGAIN");
        btnPlayAgain.setBorder(null);
        btnPlayAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayAgainActionPerformed(evt);
            }
        });
        getContentPane().add(btnPlayAgain, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 560, 200, 50));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Date & Time");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        datelabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        datelabel.setForeground(new java.awt.Color(255, 255, 255));
        datelabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                datelabelMouseMoved(evt);
            }
        });
        getContentPane().add(datelabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 130, 50));

        timelabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        timelabel.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(timelabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 110, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\ravin\\Documents\\NetBeansProjects\\SmileBuddy\\src\\main\\java\\resources\\Login.png")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 826, 676));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlayAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayAgainActionPerformed
        int attempt =0;
        GamePage gamePage = new GamePage(currentUser, attempt);
        gamePage.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnPlayAgainActionPerformed

    private void dropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownActionPerformed
        try {
            selectedGame = dropDown.getSelectedItem().toString();
            
            if (selectedGame.equals("SMILE GAME")) {
                gameColumn = "score";
                lastScoreColumn = "lastScore";
            }else if (selectedGame.equals("HEART GAME")) {
                gameColumn = "heartScore";
                lastScoreColumn = "hLastScore";
            } else{
                gameColumn = "starScore";
                lastScoreColumn = "hLastScore";
            }
            
            getScoreData(gameColumn,lastScoreColumn);
            getHighestData(gameColumn);
            
        } catch (SQLException ex) {
            Logger.getLogger(ScoreBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dropDownActionPerformed

    private void datelabelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datelabelMouseMoved
        try (Scanner s = new  Scanner(new URL("http://worldtimeapi.org/api/Asia/Colombo").openStream(),"UTF-8").useDelimiter("\\A")){
            String x = s.next();
            System.out.println("today date " + x);
 
            String[] Xsplit =x.split(",");
   
            String dateApi = ( Xsplit[2].split("\"") )[3];
    
            String[] dateAndTime = dateApi.split("T");

            System.out.println( dateAndTime[0] );
            timelabel.setText(dateAndTime[0]);
            datelabel.setText(dateAndTime[1]);
        } catch (Exception e) {
            System.err.println("Error while capeturing date time!");
        }
    }//GEN-LAST:event_datelabelMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ScoreBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPlayAgain;
    private javax.swing.JLabel datelabel;
    private javax.swing.JComboBox<String> dropDown;
    private javax.swing.JLabel highScore1;
    private javax.swing.JLabel highScore2;
    private javax.swing.JLabel highScore3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel name1;
    private javax.swing.JLabel name2;
    private javax.swing.JLabel name3;
    private javax.swing.JLabel timelabel;
    private javax.swing.JLabel usrHighScore;
    private javax.swing.JLabel usrLastScore;
    // End of variables declaration//GEN-END:variables

    private void getScoreData(String gameColumn, String lastScoreColumn) throws SQLException {
        DB_Connection obj = new DB_Connection();
        Connection connection = obj.getConnection();
        PreparedStatement ps = null;
        ResultSet rs = null;
        //List<Integer> list = new  ArrayList<Integer>();
        
        try {
            String query = "SELECT "+gameColumn+","+lastScoreColumn+" FROM scores WHERE username = ?;";
            
            ps = connection.prepareStatement(query);
            ps.setString(1, currentUser.getUsername());
            rs = ps.executeQuery();
            
            if (rs.next()) {
                usrHighScore.setText(String.valueOf(rs.getInt(gameColumn)));
                usrLastScore.setText(String.valueOf(rs.getInt(lastScoreColumn)));
            }
            
        } catch (Exception e) {
            System.out.println("Some Error when Reading Score Details From DB :");
            System.err.println(e);
            
        }
        connection.close();
        ps.close();
        rs.close();
    }

    private void getHighestData(String gameColumn) throws SQLException {
        DB_Connection obj = new DB_Connection();
        Connection connection = obj.getConnection();
        PreparedStatement ps = null;
        ResultSet rs = null;
        //List<Integer> list = new  ArrayList<Integer>();
        
        try {
            String query = "SELECT username,"+gameColumn+" FROM scores ORDER BY score DESC LIMIT 3;";
            
            ps = connection.prepareStatement(query);
            rs = ps.executeQuery();
            String[] names = new String[3];
            int[] scores = new int[3];
            int i =0;
            
            while (rs.next()) {                
                names[i] = rs.getString("username");
                scores[i] = rs.getInt(gameColumn);
                i++;
            }
            System.out.println(names[0]+","+scores[0]);
            System.out.println(names[1]+","+scores[1]);
            System.out.println(names[2]+","+scores[2]);
            name1.setText(names[0]);
            highScore1.setText(String.valueOf(scores[0]));
            name2.setText(names[1]);
            highScore2.setText(String.valueOf(scores[1]));
            name3.setText(names[2]);
            highScore3.setText(String.valueOf(scores[2]));
            
        } catch (Exception e) {
            System.out.println("Some Error when Reading Score Details From DB :");
            System.err.println(e);
            
        }
        connection.close();
        ps.close();
        rs.close();
    }
}
